# üõ°Ô∏è Projet ANSSI Alertes et CVE

Ce projet a √©t√© con√ßu pour traiter les flux RSS d'alertes et d'avis publi√©s par l'ANSSI, enrichir les donn√©es associ√©es √† ces bulletins avec des informations d√©taill√©es sur les CVE, et consolider ces donn√©es dans un fichier exploitable.

---

## üöÄ Fonctionnalit√©s principales

1. ‚úÖ **Extraction des flux RSS** :
   - Collecte les flux RSS des avis et alertes publi√©s par l'ANSSI.
   - Identifie les nouvelles entr√©es qui n'ont pas encore √©t√© trait√©es.

2. ‚úÖ **Extraction des informations CVE** :
   - R√©cup√®re les d√©tails des CVE associ√©s √† chaque bulletin via des APIs externes (MITRE et EPSS).
   - Enrichit les bulletins avec des informations critiques telles que les scores CVSS, les types CWE et les probabilit√©s d'exploitation (EPSS).

3. ‚úÖ **Consolidation des donn√©es** :
   - Compile les informations extraites dans un fichier CSV pour une analyse ult√©rieure.

4. ‚úÖ **Notifications par email** :
   - Envoie des notifications personnalis√©es aux destinataires en fonction des mots-cl√©s associ√©s aux bulletins.

---

## üõ†Ô∏è Pr√©requis

- **Python 3.7 ou sup√©rieur**
- **Modules Python requis** :
  ```bash
  pip install feedparser python-dotenv pandas requests
  ```
- **Configuration des emails** : Cr√©ez un fichier `.env` contenant les informations suivantes :
  ```env
  EMAIL_USER=votre_adresse_email@example.com
  EMAIL_PASSWORD=votre_mot_de_passe
  SMTP_SERVER=smtp.votre_serveur_email.com
  SMTP_PORT=587
  ```

---

## üìö Installation et Utilisation

1. **Pr√©parez votre environnement** :
   - Placez tous les fichiers n√©cessaires dans le m√™me r√©pertoire : `Main.py`, `Classes.py`, et `.env`.

2. **Ex√©cutez le script principal** :
   - Ouvrez un terminal et acc√©dez au r√©pertoire contenant vos fichiers.
   - Lancez le script avec Python :
     ```bash
     python Main.py
     ```

3. **R√©sultats attendus** :
   - Les nouvelles donn√©es consolid√©es seront enregistr√©es dans `DataframeConsolider.csv`.
   - Les nouvelles URL trait√©es seront stock√©es dans `processed_urls.txt`.
   - Si ces fichiers n'existent pas, ils seront cr√©√©s automatiquement lors de l'ex√©cution du script.
   - Les notifications pertinentes seront envoy√©es aux destinataires configur√©s.

---

## üåê Structure du projet
- `Main.py` : Point d'entr√©e principal du projet.
- `Classes.py` : D√©finitions des classes `CERT` et `CVE` utilis√©es pour le traitement des donn√©es.
- `DataframeConsolider.csv` : Fichier contenant les donn√©es consolid√©es.
- `processed_urls.txt` : Fichier enregistrant les URL d√©j√† trait√©es.
- `.env` : Fichier de configuration contenant les variables d'environnement pour l'envoi des emails.

---

## üë®‚Äçüíª Auteur
- **Aymen** - [Ton GitHub](https://github.com/Suupon)

---


